<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Hello World</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/babel">
   
    const divStyle = {
      color: 'White',
      backgroundColor: 'Green',
};
 
const cars = [
    {"name": "Model S", "model": "Model 1"},
    {"name": "BMW", "model": "BMW 2"},
    {"name": "Corvette", "model": "Corvette 3"},
    {"name": "R8", "model": "R8 4"},
    {"name": "Mustang", "model": "Mustang 5"},
    ];

const ListItems = (props) => {
  const ListItems = props.items.map((item) =>  <li key={item.name} onClick={props.clickHandler}>{item.name}</li>);
  return <ul>{ListItems}</ul>;
}


    const Detail = (props) => {
       return (
        <div>
        <h3>Car Details</h3>
        {props.item &&
            <form>
            <b>Name</b>: <input type="text" name="name" onChange={props.changeHandler} value={props.item.name || ''} />
            <b>Model</b>: <input type="text" name="model" onChange={props.changeHandler} value={props.item.model ||''} />
            </form>
        }
        </div>   
        )
    }
   
    //this is the parent component
const MyApp = () => {

    const [items, setItems] = React.useState(cars);
    const [selectedItem, setSelectedItem] = React.useState();

    const itemClicked = (e) => {
            let found = cars.find((item) => {return item.name == e.target.innerText});
        setSelectedItem(found);
        }

    const itemChanged = (e) => {
      let field = e.target.name;
      let newItem = {...selectedItem };
      newItem[field] = e.target.value;

      let newItems = items.filter(item => item.name != newItem.name)
      console.log(newItems)
      setSelectedItem(newItem);
 }

        
        return (
            <div>
<h2>Car description!</h2>
                <ListItems items={items} clickHandler={itemClicked}/>
            <hr />
                <Detail item={selectedItem} changeHandler={itemChanged} />
                </div>
        )
      }

      const container = document.getElementById('root');
      const root = ReactDOM.createRoot(container);
      root.render(<MyApp />);

    </script>
    <!--
      Note: this page is a great way to try React but it's not suitable for production.
      It slowly compiles JSX with Babel in the browser and uses a large development build of React.

      Read this page for starting a new React project with JSX:
      https://react.dev/learn/start-a-new-react-project

      Read this page for adding React with JSX to an existing project:
      https://react.dev/learn/add-react-to-an-existing-project
    -->
  </body>
</html>